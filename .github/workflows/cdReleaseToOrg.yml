name: 'CD - Release to org'

on:
  workflow_call:
    inputs:
      pathToReleaseDef:
        description: "Path to release definition file"
        required: true
        type: string
      org:
        description: "Org (prod, preprod, dev, uat, sit)"
        required: true
        type: string

jobs:
  releaseToOrg:
    name: Release to org
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Authenticate to target org
        run: |
          echo "get auth url for ${{ inputs.org }}"
            if [ ${{ inputs.org }} == "prod" ];then
                echo "${{ secrets.CRM_PROD_SFDX_URL }}" > ./authfile
                echo "'prod' was set"
            elif [ ${{ inputs.org }} == "preprod" ];then
                echo "${{ secrets.CRM_PREPROD_SFDX_URL }}" > ./authfile
                echo "'preprod' was set"
            elif [ ${{ inputs.org }} == "dev" ];then
                echo "${{ secrets.DEV_SFDX_URL }}" > ./authfile
                echo "'dev' was set"
            elif [ ${{ inputs.org }} == "crm-uat" ];then
                echo "${{ secrets.CRM_UAT_SFDX_URL }}" > ./authfile
                echo "'crm-uat' was set"  
            elif [ ${{ inputs.org }} == "uat" ];then
                echo "${{ secrets.UAT_SFDX_URL }}" > ./authfile
                echo "'uat' was set"
            elif [ ${{ inputs.org }} == "sit" ];then
                echo "${{ secrets.CRM_SIT_SFDX_URL }}" > ./authfile
                echo "'sit' was set"
            else
                echo "Could not find any authUrl for org ${{ inputs.org }}"
            fi
          
          sf org login sfdx-url --sfdx-url-file ./authfile --alias org

      # Authenticate to npm
      - uses: actions/setup-node@v4
        with:
          registry-url: 'https://npm.pkg.github.com'

      # Release to environment
      - name: 'Release to org'
        run: 'sfp release --targetorg org --releasedefinition ${{ inputs.pathToReleaseDef }} --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog --logsgroupsymbol "::group::,::endgroup::"'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Deploy package
on:
  workflow_call:
    inputs:
      packageId:
        description: "Package ID"
        required: true
        type: string
      org:
        description: "Org (prod, preprod, dev, uat, sit)"
        required: true
        type: string
      unpackagable:
        description: "Path to unpackageable folder"
        required: false
        type: string
      SFDX_ENV:
        description: "Environent variables to be set for sfdx commands"
        required: false
        type: string
    outputs:
      successfullyInstalledPackage:
        value: ${{ jobs.deploy-package.outputs.successfullyInstalledPackage }}
      deployMetadata:
        value: ${{ jobs.deploy-package.outputs.deployMetadata }}
      successfullyDeployedMetadata:
        value: ${{ jobs.deploy-package.outputs.successfullyDeployedMetadata }}
jobs:
  deploy-package:
    name: Deploy Package
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      successfullyInstalledPackage: ${{ steps.installPackage.outputs.successfullyInstalled }}
      installPackageOutput: ${{ steps.installPackage.outputs.installOutput }}
      deployMetadata: ${{ steps.deployMetadata.outputs.deployMetadata }}
      successfullyDeployedMetadata: ${{ steps.deployMetadata.outputs.successfullyDeployedMetadata }}
      deployMetadataOutput: ${{ steps.deployMetadata.outputs.deployOutput }}
    steps:
      # Set SF Auth URL
      - name: Set SF Auth URL
        id: auth-url
        run: |
          if [ ${{ inputs.org }} == "prod" ];then
            echo "target=$(echo ${{ secrets.CRM_PROD_SFDX_URL }})" >> $GITHUB_ENV
            echo "'prod' was set"
          elif [ ${{ inputs.org }} == "preprod" ];then
            echo "target=$(echo ${{ secrets.CRM_PREPROD_SFDX_URL }})" >> $GITHUB_ENV
            echo "'preprod' was set"
          elif [ ${{ inputs.org }} == "dev" ];then
            echo "target=$(echo ${{ secrets.DEV_SFDX_URL }})" >> $GITHUB_ENV
            echo "'dev' was set"
          elif [ ${{ inputs.org }} == "crm-uat" ];then
            echo "target=$(echo ${{ secrets.CRM_UAT_SFDX_URL }})" >> $GITHUB_ENV
            echo "'crm-uat' was set"  
          elif [ ${{ inputs.org }} == "uat" ];then
            echo "target=$(echo ${{ secrets.UAT_SFDX_URL }})" >> $GITHUB_ENV
            echo "'uat' was set"
          elif [ ${{ inputs.org }} == "sit" ];then
            echo "target=$(echo ${{ secrets.CRM_SIT_SFDX_URL }})" >> $GITHUB_ENV
            echo "'sit' was set"
          else
            echo "target=$(echo ${{ inputs.org }})" >> $GITHUB_ENV
            echo "input org was set to input"
          fi

      # Install SF
      - name: Install SF
        uses: navikt/crm-workflows-base/.github/actions/installSF@master

      # Authorize SF
      - name: Authorize SF
        uses: navikt/crm-workflows-base/.github/actions/authenticateOrg@master
        with:
          auth-url: ${{ env.target }}
          alias: targetOrg
          setDefaultUsername: true
          setDefaultDevhubUsername: false

      # Install package in target org
      - name: Install package in target org
        id: installPackage
        run: |
          sf package install --package ${{ inputs.packageId }} --installation-key ${{ secrets.CRM_PACKAGE_KEY }} --wait 10 --publish-wait 10 --no-prompt --json | tee output.json
          echo "installOutput=$(jq '.message' output.json)" >> $GITHUB_OUTPUT
          if [[ $(jq '.status' output.json) == 0 ]]; then
            echo "successfullyInstalled=true" >> $GITHUB_OUTPUT
          else
            echo "successfullyInstalled=false" >> $GITHUB_OUTPUT
            
            exit 125
          fi
          rm output.json

      # Checkout source code
      - name: Checkout source code from master
        uses: actions/checkout@v3

      # Deploy unpackagable content
      - name: Deploy unpackagable content
        id: deployMetadata
        run: |
          if [ -d "${{ inputs.unpackagable }}" ]; then
            echo "Starting deployment of ${{ inputs.unpackagable }}"
            echo "deployMetadata=true" >> $GITHUB_OUTPUT
            ${{ inputs.SFDX_ENV }} sf project deploy start  --source-dir ${{inputs.unpackagable}} --test-level RunLocalTests --json | tee output.json
            echo "deployOutput=$(jq -r '.message' output.json)" >> $GITHUB_OUTPUT
            if [ $(jq -r '.status' output.json) == "0" ]; then
              echo "successfullyDeployedMetadata=true" >> $GITHUB_OUTPUT
            else
              echo "successfullyDeployedMetadata=false" >> $GITHUB_OUTPUT

              exit 125
            fi
            rm output.json
          else
            echo "deployMetadata=false" >> $GITHUB_OUTPUT
            echo "successfullyDeployedMetadata=true" >> $GITHUB_OUTPUT
          fi
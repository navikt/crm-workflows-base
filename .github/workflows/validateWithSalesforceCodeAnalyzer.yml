name: "Validate With Salesforce Code Analyzer"
on:
  workflow_call:
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      # Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v3

        # Delete scratch-org folder
      - name: Delete scratch-org folder
        run: |
          rm -rf ./force-app/scratch-org

      # Install SFDX
      - name: Install SFDX
        uses: navikt/crm-workflows-base/.github/actions/installSFDX@convertFromSfdxToSf

      # Install Salesforce Code Analyzer
      - name: Install Salesforce Code Analyzer
        uses: navikt/crm-workflows-base/.github/actions/installSalesforceCodeAnalyzer@convertFromSfdxToSf

      - name: Run copy pasta detection
        run: |
          sfdx scanner:run -t ./force-app --engine cpd --normalize-severity --verbose --json | tee output
          echo "$(jq --raw-output --arg pwd "$PWD" '.result[] | "\(.fileName | split($pwd)[1]) has \( .violations | length ) violation(s)"' <<< "$output")"
          echo
          echo "WARNINGS"
          echo "$(jq '.warnings[]' <<< "$output")"

      - name: Run Code Analyzer
        run: |
          sfdx scanner:run -t ./force-app --normalize-severity --format json --outfile scannerResult.json | tee output
          echo "$(jq --raw-output --arg pwd "$PWD" '.result[] | "\(.fileName | split($pwd)[1]) has \( .violations | length ) violation(s)"' <<< "$output")"
          echo
          echo "WARNINGS"
          echo "$(jq --raw-output '.warnings[]' <<< "$output")"

      - name: Run Data Flow Analysis
        run: |
          sfdx scanner:run:dfa --projectdir ./force-app --target ./force-app --normalize-severity --format json --outfile scannerResult.json | tee output
          echo "$(jq --raw-output --arg pwd "$PWD" '.result[] | "\(.fileName | split($pwd)[1]) has \( .violations | length ) violation(s)"' <<< "$output")"
          echo
          echo "WARNINGS"
          echo "$(jq --raw-output '.warnings[]' <<< "$output")"